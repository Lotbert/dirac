ns               Testing dirac.tests.tasks.suite01.completions
automate         open-tab-with-scenario! ["completions"]
automate         open-devtools!
extension        handling command: open-dirac-devtools
extension        register devtools #1
devtools #1      implant initialized
devtools #1      reset devtools settings
devtools #1      devtools ready
devtools #1      setCurrentPanel: elements
automate #1      switch-to-console-panel!
devtools #1      console initialized
devtools #1      adopt-prompt-element use-parinfer? true
devtools #1      setDiracPromptMode('status')
devtools #1      ConsoleView constructed
devtools #1      displayWelcomeMessage
devtools #1      setCurrentPanel: console
automate #1      switch-prompt-to-dirac!
devtools #1      switched console prompt to 'dirac'
devtools #1      repl initialized
devtools #1      setDiracPromptStatusContent('Checking for Dirac Runtime presence in your app...')
devtools #1      setDiracPromptStatusStyle('info')
devtools #1      setDiracPromptStatusContent('Dirac Agent connected. Bootstrapping ClojureScript REPL...')
devtools #1      setDiracPromptNS('cljs.user')
devtools #1      wrap-with-postprocess-and-eval-in-current-context!
devtools #1      wrap-with-postprocess-and-eval-in-current-context!
devtools #1      setDiracPromptMode('edit')
automate #1      enable-console-feedback!
automate #1      console-exec-and-match! ["(in-ns 'dirac.tests.scenarios.completions.workspace)" "setDiracPromptNS('dirac.tests.scenarios.completions.workspace')"]
devtools #1      DC.log> (in-ns 'dirac.tests.scenarios.completions.workspace)
devtools #1      send-eval-request: (in-ns 'dirac.tests.scenarios.completions.workspace)
devtools #1      repl eval job started
devtools #1      wrap-with-postprocess-and-eval-in-current-context!
devtools #1      setDiracPromptNS('dirac.tests.scenarios.completions.workspace')
devtools #1      repl eval job ended
automate #1      simulate-console-input! ["sample"]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 3 items:
                  * sample-def
                  * sample-defn
                  * sample-defonce
automate #1      clear-console-prompt!
automate #1      simulate-console-input! ["js/docume"]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 1 items:
                  * document
automate #1      simulate-console-action! ["TAB"]
automate #1      print-prompt!
stdout           js/document
automate #1      simulate-console-input! [".get"]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 6 items:
                  * getElementById
                  * getElementsByClassName
                  * getElementsByName
                  * getElementsByTagName
                  * getElementsByTagNameNS
                  * getSelection
automate #1      simulate-console-action! ["TAB"]
automate #1      print-prompt!
stdout           js/document.getElementById
automate #1      clear-console-prompt!
automate #1      simulate-console-input! ["cljs.core/part"]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 4 items:
                  * partial
                  * partition
                  * partition-all
                  * partition-by
automate #1      simulate-console-action! ["TAB"]
automate #1      print-prompt!
stdout           cljs.core/partial
automate #1      clear-console-prompt!
automate #1      simulate-console-input! ["devtools."]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 9 items:
                  * devtools.core
                  * devtools.custom-formatters
                  * devtools.format
                  * devtools.prefs
                  * devtools.sanity-hints
                  * devtools.util
                  * devtools.util
                  * devtools.version
                  * devtools.version
automate #1      simulate-console-action! ["DOWN"]
automate #1      simulate-console-action! ["TAB"]
automate #1      print-prompt!
stdout           devtools.custom-formatters
automate #1      clear-console-prompt!
automate #1      simulate-console-input! ["cljs.cor"]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 11 items:
                  * cljs.core
                  * cljs.core
                  * cljs.core.async
                  * cljs.core.async.impl.buffers
                  * cljs.core.async.impl.channels
                  * cljs.core.async.impl.dispatch
                  * cljs.core.async.impl.ioc-helpers
                  * cljs.core.async.impl.ioc-macros
                  * cljs.core.async.impl.protocols
                  * cljs.core.async.impl.timers
                  * cljs.core.async.macros
automate #1      simulate-console-action! ["RIGHT"]
automate #1      print-prompt!
stdout           cljs.core
automate #1      simulate-console-input! ["/clj-"]
automate #1      print-suggest-box!
stdout           dirac prompt: suggest box displays 1 items:
                  * clj->js
automate #1      simulate-console-action! ["RIGHT"]
automate #1      print-prompt!
stdout           cljs.core/clj->js
automate #1      clear-console-prompt!
automate #1      get-suggest-box-item-count
automate #1      simulate-console-action! ["CTRL+SPACE"]
automate #1      get-suggest-box-item-count
automate #1      close-devtools!
extension        handling command: close-dirac-devtools
extension        unregister devtools #1
automate         close-tab-with-scenario! ["scenario-tab#1"]
summary          Automated 43 actions with 1 check-points containing 8 assertions.
                 0 failures, 0 errors.
